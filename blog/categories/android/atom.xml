<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Simple Coding, Better Life]]></title>
  <link href="http://jackyche.github.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://jackyche.github.com/"/>
  <updated>2012-07-22T20:34:46+08:00</updated>
  <id>http://jackyche.github.com/</id>
  <author>
    <name><![CDATA[Jackyche]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android编译预处理及多渠道发布]]></title>
    <link href="http://jackyche.github.com/blog/2012/07/22/android-preprocess-and-multi-channel-release/"/>
    <updated>2012-07-22T11:06:00+08:00</updated>
    <id>http://jackyche.github.com/blog/2012/07/22/android-preprocess-and-multi-channel-release</id>
    <content type="html"><![CDATA[<p>Android游戏在国内的渠道实在太乱了，像UC、91、QQ、应用汇、安智市场、N多网这样的平台，大大小小几十个。一款游戏如果需要在所有的渠道上发布，还得为每个渠道定制相应的版本。这种活如果人肉一个渠道一个渠道去做，有点劳民伤财。考虑到不同渠道的版本在代码和资源上99%都是相同的，这种事情应该用脚本去完成。</p>

<p>五六年前J2ME游戏经常需要为上百款设备做适配，当时比较流行的发布策略是<a href="http://ant.apache.org/">Ant</a> + <a href="http://antenna.sourceforge.net/">Antenna</a>。考虑了一下，这种策略对于应付Android的多渠道也是绰绰有余的。</p>

<p>这篇文章分享一下基于Ant + Antenna的Android游戏多渠道发布策略。</p>

<!-- more -->


<p>不同渠道的版本，通常情况下差异在两个方面：少量代码 + 资源。</p>

<h3>首先处理代码的差异性：</h3>

<p>在C/C++里面，因为有#ifdef，#ifndef这种条件预编译宏的存在，可以很方便为每个渠道做代码的定制化，但是Java不支持这种方式。那就是说，一份Java代码只能编译出一个执行文件(不要跟我说动态运行这件事，这不是编译期的事情)，那我们如何来解决这个问题呢。换一种思路来考虑问题：事实上我们并不排斥多份编译代码的存在，我们关心的是能否只维护一份代码。</p>

<p>Antenna用一种取巧的方式解决了这个问题：每次通过对原始代码做预处理，得到一份中间代码，然后对这份中间代码进行编译发布。</p>

<p>Antenna提供了类似C/C++里的条件预编译宏，具体支持的宏定义可以参考<a href="http://antenna.sourceforge.net/wtkpreprocess.php">这里</a>。比较大的差别在于，Antenna的预编译宏是以<code>//</code>开头的，它以注释的形式存在于代码中，不会导致原始代码的编译错误。</p>

<p>下面是一个示例：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//#ifdef CHANNEL_91</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_91);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_UC</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">hello_activity_uc</span><span class="o">);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_QQ</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_qq);</span>
</span><span class='line'><span class="c1">//#endif</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
然后我们可以定义Ant任务
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>!-- wtk is not neccessory ,but still need to define wtk.home --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>property name=&quot;wtk.home&quot; value=&quot;/tmp&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>path id=&quot;antenna.lib&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>pathelement location=&quot;antenna/antenna-bin-1.2.1-beta.jar&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'> <span class="ni">&amp;lt;</span>/path<span class="ni">&amp;gt;</span>
</span><span class='line'> <span class="ni">&amp;lt;</span>!-- Defining Antenna&#39;s WTK tasks hard coded, do NOT ask --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>taskdef name=&quot;preprocess&quot; classname=&quot;de.pleumann.antenna.WtkPreprocess&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>classpath refid=&quot;antenna.lib&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/taskdef<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>!--
</span><span class='line'>  input: macros.definition
</span><span class='line'>  environment: srcdir, destdir
</span><span class='line'>--<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>target name=&quot;preproc&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo message=&quot;proproc: ${version.definition}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>preprocess srcdir=&quot;${srcdir}&quot; destdir=&quot;${outdir-preprocess}&quot; symbols=&quot;${macros.definition}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>target name=&quot;preproc_uc&quot; description=&quot;release for uc platform&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>antcall target=&quot;preproc&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>param name=&quot;macros.definition&quot; value=&quot;CHANNEL_UC&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/antcall<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>target name=&quot;preproc_qq&quot; description=&quot;release for qq platform&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>antcall target=&quot;preproc&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>param name=&quot;macros.definition&quot; value=&quot;CHANNEL_QQ&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/antcall<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div><br/>
这里有两个Ant任务：<code>preproc_uc</code>和<code>preproc_qq</code>。当我们执行<code>preproc_uc</code>的时候，会得出以下的中间代码：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//#ifdef CHANNEL_91</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_91);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_UC</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">hello_activity_uc</span><span class="o">);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_QQ</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_qq);</span>
</span><span class='line'><span class="c1">//#endif</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>    <br/>
而当我们执行<code>preproc_qq</code>的时候，则会得出以下的中间代码：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">//#ifdef CHANNEL_91</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_91);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_UC</span>
</span><span class='line'><span class="c1">//@ setContentView(R.layout.hello_activity_uc);</span>
</span><span class='line'><span class="c1">//#elifdef CHANNEL_QQ</span>
</span><span class='line'>    <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">hello_activity_qq</span><span class="o">);</span>
</span><span class='line'><span class="c1">//#endif</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>    <br/>
之后我们就可以根据生成的不同中间代码，编译不同的渠道版本。</p>

<p>Antenna支持多个编译宏的形式，在这段示例里<code>macros.definition</code>的编译宏参数以逗号分隔就可以了，如：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;preproc_91&quot; description=&quot;release for qq platform&quot; <span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>antcall target=&quot;preproc&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>param name=&quot;macros.definition&quot; value=&quot;CHANNEL_91, FLAG_91, PARAMS_91&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/antcall<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>同样它也支持一系列的条件判断语句，具体请参考<a href="http://antenna.sourceforge.net/wtkpreprocess.php">这里</a>。</p>

<p>这里需要注意的是，Antenna在执行的时候，会把不需要的相应代码块用<code>//@</code>注释掉。</p>

<h3>接下来解决资源打包问题：</h3>

<p>Android打包应用，一般会经过以下几个步骤：</p>

<ol>
<li>用aapt命令生成R.java文件</li>
<li>用javac命令编译java源文件生成class文件</li>
<li>用dx将class文件转换成classes.dex文件</li>
<li>用aapt命令生成资源包文件resources.ap_</li>
<li>用apkbuilder打包资源和classes.dex文件,生成unsigned.apk</li>
<li>用jarsinger命令对apk认证,生成signed.apk</li>
<li>用jarsinger的verify功能对apk进行校验</li>
<li>做相应的发布清理工作</li>
</ol>


<p>我们可以用Ant脚本定义每一个步骤：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>生成R.java文件  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;gen-R&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Generating R.java from the resources...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${aapt}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;package&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-f&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-m&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-J&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${outdir-gen}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-S&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${resource-dir}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-M&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${manifest-xml}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-I&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${android-jar}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>编译java源文件  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;compile&quot; depends=&quot;gen-R&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Compiling java source code...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>javac encoding=&quot;utf-8&quot; target=&quot;1.6&quot; destdir=&quot;${outdir-classes}&quot; bootclasspath=&quot;${android-jar}&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>src path=&quot;${outdir-preprocess}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>src path=&quot;${outdir-gen}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="ni">&amp;lt;</span>classpath<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>fileset dir=&quot;${external-lib}&quot; includes=&quot;*.jar&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/classpath<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/javac<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这里需要编译生成的R.java，以及经过Antenna处理过的中间代码。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>将class文件转换成classes.dex文件  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;dex&quot; depends=&quot;compile&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Converting compiled files and external libraries into a .dex file...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${dx}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;--dex&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;--output=${dex-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${outdir-classes-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${external-lib-ospath}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>生成资源包文件resources.ap_  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;package-res-and-assets&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Packaging resources and assets...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${aapt}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;package&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-f&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-M&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${manifest-xml}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-S&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${resource-dir}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-A&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${asset-dir}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-I&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${android-jar}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-F&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${resources-package}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>打包未签名apk  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;package&quot; depends=&quot;dex, package-res-and-assets&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Packaging unsigned apk for release...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${apkbuilder}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>!--<span class="ni">&amp;lt;</span>arg value=&quot;${out-unsigned-package-ospath}&quot; /<span class="ni">&amp;gt;</span>--<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${out-unsigned-package-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-u&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-z&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${resources-package-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-f&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${dex-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-rf&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${srcdir-ospath}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>It will need to be signed with jarsigner before being published.<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>对apk进行认证  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;jarsigner&quot; depends=&quot;package&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Packaging signed apk for release...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${jarsigner}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-keystore&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${keystore-file}&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-storepass&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;qwer1234&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-keypass&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;qwer1234&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-signedjar&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${outdir-release}/${release.name}.apk&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${out-unsigned-package-ospath}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>!-- don&#39;t forget alis of certification --<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;release.keystore&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果你没有生成keystore文件，需要用以下命令生成：</p>

<pre><code>keytool -genkey -v -keystore &lt;file_name&gt; -alias &lt;alias_name&gt; -keyalg RSA -validity 10000
</code></pre>

<p>照着提示生成就可以了。</p>

<p>这里需要注意的是jarsigner需要提供keystore的别名。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>校验认证  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;verifysign&quot; depends=&quot;jarsigner&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>Verfify signed apk for release...<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>exec executable=&quot;${jarsigner}&quot; failonerror=&quot;true&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-verify&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;-verbose&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arg value=&quot;${outdir-release}/${release.name}.apk&quot; /<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/exec<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>做发布清理  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>target name=&quot;release&quot; depends=&quot;verifysign&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>delete file=&quot;${out-unsigned-package-ospath}&quot;/<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>echo<span class="ni">&amp;gt;</span>APK is released. path:${outdir-release}/${release.name}.apk<span class="ni">&amp;lt;</span>/echo<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/target<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>有了这些脚本，我们就可以对资源打包做灵活性控制了。例如我们对于不同的渠道，可以用不同的<code>AndroidManifest.xml</code>，打包不同的<code>res</code>文件夹，诸如此类。</p>

<p>最后我在GitHub上写了一个示例的工程，仅供参考：<a href="https://github.com/jackyche/AndroidAntennaExample">AndroidAntennaExample</a></p>

<h3>参考资料</h3>

<ul>
<li><a href="http://antenna.sourceforge.net/wtkpreprocess.php">http://antenna.sourceforge.net/wtkpreprocess.php</a></li>
<li><a href="http://stackoverflow.com/questions/1797930/how-to-get-eclipse-to-recognize-preprocessor-statements">http://stackoverflow.com/questions/1797930/how-to-get-eclipse-to-recognize-preprocessor-statements</a></li>
<li><a href="http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html">http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
